/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Rasoi APis */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            message: string;
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/alive": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Rasoi APis */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            message: string;
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/health": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description The server is healthy */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/test/test": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Rasoi APis */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            message: string;
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/auth/email-totp-generate": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            /** @description Email to generate TOTP */
            requestBody: {
                content: {
                    "application/json": {
                        /** Format: email */
                        email: string;
                    };
                };
            };
            responses: {
                /** @description TOTP Generated */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            message: string;
                        };
                    };
                };
                /** @description Email not found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            message: string;
                        };
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/auth/email-totp-validate": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: {
            parameters: {
                query?: never;
                header: {
                    "x-totp": string;
                };
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Validated User Schema */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id: number;
                            firstName: string;
                            lastName: string;
                            email: string;
                            /** @enum {string} */
                            role: "salesManager" | "dataScienceSales" | "operationsCoordinator" | "dataScienceOperations" | "dataScienceAccounts" | "recoveryExecutive" | "admin";
                            phoneNumber: string;
                            createdAt: string;
                            updatedAt: string;
                            archivedAt: string | null;
                            accessToken: string;
                            refreshToken: string;
                        };
                    };
                };
                /** @description TOTP validation failed */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            message: string;
                            error: string;
                        };
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/auth/generate-access-token": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: {
            parameters: {
                query?: never;
                header: {
                    "x-refresh": string;
                };
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Validated User Schema */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id: number;
                            firstName: string;
                            lastName: string;
                            email: string;
                            /** @enum {string} */
                            role: "salesManager" | "dataScienceSales" | "operationsCoordinator" | "dataScienceOperations" | "dataScienceAccounts" | "recoveryExecutive" | "admin";
                            phoneNumber: string;
                            createdAt: string;
                            updatedAt: string;
                            archivedAt: string | null;
                            accessToken: string;
                            refreshToken: string;
                        };
                    };
                };
                /** @description TOTP validation failed */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            message: string;
                            error: string;
                        };
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/auth/logout": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: {
            parameters: {
                query?: never;
                header: {
                    authorization: string;
                };
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Logged out */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            message: string;
                        };
                    };
                };
                /** @description Logout failed */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            message: string;
                            error: string;
                        };
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/users": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * List all users
         * @description List all users using this Api
         */
        get: {
            parameters: {
                query: {
                    page: string;
                    limit?: string;
                };
                header: {
                    authorization: string;
                };
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Validated User Schema */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            users: {
                                id?: number;
                                firstName: string;
                                lastName: string;
                                email: string;
                                /** @enum {string} */
                                role: "salesManager" | "dataScienceSales" | "operationsCoordinator" | "dataScienceOperations" | "dataScienceAccounts" | "recoveryExecutive" | "admin";
                                phoneNumber: string;
                                createdAt?: string;
                                updatedAt?: string;
                                archivedAt?: string | null;
                            }[];
                            total: number;
                            page: string;
                            limit: string;
                        };
                    };
                };
                /** @description Forbidden */
                403: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /**
                             * @description Unauthorized
                             * @example You dont have elevated permissions to create a user
                             */
                            message: string;
                        };
                    };
                };
            };
        };
        put?: never;
        /**
         * Create a new user
         * @description Create a new user using this Api
         */
        post: {
            parameters: {
                query?: never;
                header: {
                    authorization: string;
                };
                path?: never;
                cookie?: never;
            };
            /** @description User Data To Store */
            requestBody: {
                content: {
                    "application/json": {
                        id?: number;
                        firstName: string;
                        lastName: string;
                        email: string;
                        /** @enum {string} */
                        role: "salesManager" | "dataScienceSales" | "operationsCoordinator" | "dataScienceOperations" | "dataScienceAccounts" | "recoveryExecutive" | "admin";
                        phoneNumber: string;
                        createdAt?: string;
                        updatedAt?: string;
                        archivedAt?: string | null;
                    };
                };
            };
            responses: {
                /** @description TOTP Generated */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id: number;
                            firstName: string;
                            lastName: string;
                            email: string;
                            /** @enum {string} */
                            role: "salesManager" | "dataScienceSales" | "operationsCoordinator" | "dataScienceOperations" | "dataScienceAccounts" | "recoveryExecutive" | "admin";
                            phoneNumber: string;
                            createdAt: string;
                            updatedAt: string;
                            archivedAt: string | null;
                        };
                    };
                };
                /** @description Bad Request */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /**
                             * @description Bad Request
                             * @example User already exists
                             */
                            message: string;
                        };
                    };
                };
                /** @description Forbidden */
                403: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /**
                             * @description Unauthorized
                             * @example You dont have elevated permissions to create a user
                             */
                            message: string;
                        };
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/users/roles": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get all user roles
         * @description Get all user roles using this Api
         */
        get: {
            parameters: {
                query?: never;
                header: {
                    authorization: string;
                };
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description User Roles */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            roles: string[];
                        };
                    };
                };
                /** @description Forbidden */
                403: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /**
                             * @description Unauthorized
                             * @example You dont have elevated permissions to create a user
                             */
                            message: string;
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/users/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get a user
         * @description Get a user using this Api
         */
        get: {
            parameters: {
                query?: never;
                header: {
                    authorization: string;
                };
                path: {
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Validated User Schema */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id: number;
                            firstName: string;
                            lastName: string;
                            email: string;
                            /** @enum {string} */
                            role: "salesManager" | "dataScienceSales" | "operationsCoordinator" | "dataScienceOperations" | "dataScienceAccounts" | "recoveryExecutive" | "admin";
                            phoneNumber: string;
                            createdAt: string;
                            updatedAt: string;
                            archivedAt: string | null;
                        };
                    };
                };
                /** @description Forbidden */
                403: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /**
                             * @description Unauthorized
                             * @example You dont have elevated permissions to create a user
                             */
                            message: string;
                        };
                    };
                };
                /** @description User not found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            message: string;
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        /**
         * Delete a user
         * @description Delete a user using this Api
         */
        delete: {
            parameters: {
                query?: never;
                header: {
                    authorization: string;
                };
                path: {
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description User Deleted */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id: number;
                            firstName: string;
                            lastName: string;
                            email: string;
                            /** @enum {string} */
                            role: "salesManager" | "dataScienceSales" | "operationsCoordinator" | "dataScienceOperations" | "dataScienceAccounts" | "recoveryExecutive" | "admin";
                            phoneNumber: string;
                            createdAt: string;
                            updatedAt: string;
                            archivedAt: string | null;
                        };
                    };
                };
                /** @description Forbidden */
                403: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /**
                             * @description Unauthorized
                             * @example You dont have elevated permissions to create a user
                             */
                            message: string;
                        };
                    };
                };
                /** @description User not found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            message: string;
                        };
                    };
                };
            };
        };
        options?: never;
        head?: never;
        /**
         * Update a user
         * @description Update a user using this Api
         */
        patch: {
            parameters: {
                query?: never;
                header: {
                    authorization: string;
                };
                path: {
                    id: string;
                };
                cookie?: never;
            };
            /** @description User Data To Store */
            requestBody: {
                content: {
                    "application/json": {
                        id?: number;
                        firstName?: string;
                        lastName?: string;
                        email?: string;
                        /** @enum {string} */
                        role?: "salesManager" | "dataScienceSales" | "operationsCoordinator" | "dataScienceOperations" | "dataScienceAccounts" | "recoveryExecutive" | "admin";
                        phoneNumber?: string;
                        createdAt?: string;
                        updatedAt?: string;
                        archivedAt?: string | null;
                    };
                };
            };
            responses: {
                /** @description User Updated */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id: number;
                            firstName: string;
                            lastName: string;
                            email: string;
                            /** @enum {string} */
                            role: "salesManager" | "dataScienceSales" | "operationsCoordinator" | "dataScienceOperations" | "dataScienceAccounts" | "recoveryExecutive" | "admin";
                            phoneNumber: string;
                            createdAt: string;
                            updatedAt: string;
                            archivedAt: string | null;
                        };
                    };
                };
                /** @description Forbidden */
                403: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /**
                             * @description Unauthorized
                             * @example You dont have elevated permissions to create a user
                             */
                            message: string;
                        };
                    };
                };
                /** @description User not found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            message: string;
                        };
                    };
                };
            };
        };
        trace?: never;
    };
    "/api/users/list/all": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * List all users
         * @description List all users using this Api
         */
        get: {
            parameters: {
                query?: never;
                header: {
                    authorization: string;
                };
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Validated User Schema */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            users: {
                                id?: number;
                                firstName: string;
                                lastName: string;
                                email: string;
                                /** @enum {string} */
                                role: "salesManager" | "dataScienceSales" | "operationsCoordinator" | "dataScienceOperations" | "dataScienceAccounts" | "recoveryExecutive" | "admin";
                                phoneNumber: string;
                                createdAt?: string;
                                updatedAt?: string;
                                archivedAt?: string | null;
                            }[];
                            total: number;
                        };
                    };
                };
                /** @description Forbidden */
                403: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /**
                             * @description Unauthorized
                             * @example You dont have elevated permissions to create a user
                             */
                            message: string;
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/files/signedUrl": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get a signed url
         * @description Get a signed url to upload a file
         */
        get: {
            parameters: {
                query: {
                    fileCategory: string;
                    fileType: string;
                    id: string;
                    contentType: string;
                };
                header: {
                    authorization: string;
                };
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Signed Url */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            signedUrl: string;
                            key: string;
                        };
                    };
                };
                /** @description Forbidden */
                403: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /**
                             * @description Unauthorized
                             * @example You dont have elevated permissions to create a user
                             */
                            message: string;
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/shops": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * List shops
         * @description List all shops
         */
        get: {
            parameters: {
                query?: never;
                header: {
                    authorization: string;
                };
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Success */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            data: {
                                id: number;
                                name: string;
                                address: string | null;
                                customer: string;
                                phoneNumber: string;
                            }[];
                        };
                    };
                };
                /** @description Forbidden */
                403: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /**
                             * @description Unauthorized
                             * @example You dont have elevated permissions to create a user
                             */
                            message: string;
                        };
                    };
                };
            };
        };
        put?: never;
        /**
         * Create a shop
         * @description Create a shop
         */
        post: {
            parameters: {
                query?: never;
                header: {
                    authorization: string;
                };
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        customer?: {
                            id?: number;
                            name: string;
                            contactNumber: string;
                            isOwner: boolean;
                            shopId?: number | null;
                            createdAt?: string;
                            updatedAt?: string;
                        }[];
                        shop: {
                            id?: number;
                            name: string;
                            address?: string | null;
                            location?: string | null;
                            salesOwnerId?: number | null;
                            buyerType?: string | null;
                            sellerType?: string | null;
                            panCard?: string | null;
                            gstin?: string | null;
                            verifiedAt?: string | null;
                            createdAt?: string;
                            updatedAt?: string;
                            archivedAt?: string | null;
                        };
                        documents?: {
                            id?: number;
                            type: string;
                            url: string;
                            shopId?: number | null;
                            createdAt?: string;
                            updatedAt?: string;
                        }[];
                    };
                };
            };
            responses: {
                /** @description Success */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            message: string;
                        };
                    };
                };
                /** @description Forbidden */
                403: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /**
                             * @description Unauthorized
                             * @example You dont have elevated permissions to create a user
                             */
                            message: string;
                        };
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/shops/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get a shop
         * @description Get a shop
         */
        get: {
            parameters: {
                query?: never;
                header: {
                    authorization: string;
                };
                path: {
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Success */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            shop: {
                                id?: number;
                                name: string;
                                address?: string | null;
                                location?: string | null;
                                salesOwnerId?: number | null;
                                buyerType?: string | null;
                                sellerType?: string | null;
                                panCard?: string | null;
                                gstin?: string | null;
                                verifiedAt?: string | null;
                                createdAt?: string;
                                updatedAt?: string;
                                archivedAt?: string | null;
                                customers?: {
                                    id?: number;
                                    name: string;
                                    contactNumber: string;
                                    isOwner: boolean;
                                    shopId?: number | null;
                                    createdAt?: string;
                                    updatedAt?: string;
                                }[];
                                documents?: {
                                    id?: number;
                                    type: string;
                                    url: string;
                                    shopId?: number | null;
                                    createdAt?: string;
                                    updatedAt?: string;
                                }[];
                            };
                        };
                    };
                };
                /** @description Forbidden */
                403: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /**
                             * @description Unauthorized
                             * @example You dont have elevated permissions to create a user
                             */
                            message: string;
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        /**
         * Delete a shop
         * @description Delete a shop
         */
        delete: {
            parameters: {
                query?: never;
                header: {
                    authorization: string;
                };
                path: {
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Success */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            message: string;
                        };
                    };
                };
                /** @description Forbidden */
                403: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /**
                             * @description Unauthorized
                             * @example You dont have elevated permissions to create a user
                             */
                            message: string;
                        };
                    };
                };
            };
        };
        options?: never;
        head?: never;
        /**
         * Update a shop
         * @description Update a shop
         */
        patch: {
            parameters: {
                query?: never;
                header: {
                    authorization: string;
                };
                path: {
                    id: string;
                };
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        toDeleteCustomers?: {
                            id?: number;
                            name: string;
                            contactNumber: string;
                            isOwner: boolean;
                            shopId?: number | null;
                            createdAt?: string;
                            updatedAt?: string;
                        }[];
                        toDeleteDocuments?: {
                            id?: number;
                            type: string;
                            url: string;
                            shopId?: number | null;
                            createdAt?: string;
                            updatedAt?: string;
                        }[];
                        toAddCustomers?: {
                            id?: number;
                            name: string;
                            contactNumber: string;
                            isOwner: boolean;
                            shopId?: number | null;
                            createdAt?: string;
                            updatedAt?: string;
                        }[];
                        toAddDocuments?: {
                            id?: number;
                            type: string;
                            url: string;
                            shopId?: number | null;
                            createdAt?: string;
                            updatedAt?: string;
                        }[];
                        toUpdateShop?: {
                            id?: number;
                            name: string;
                            address?: string | null;
                            location?: string | null;
                            salesOwnerId?: number | null;
                            buyerType?: string | null;
                            sellerType?: string | null;
                            panCard?: string | null;
                            gstin?: string | null;
                            verifiedAt?: string | null;
                            createdAt?: string;
                            updatedAt?: string;
                            archivedAt?: string | null;
                        };
                    };
                };
            };
            responses: {
                /** @description Success */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            message: string;
                        };
                    };
                };
                /** @description Forbidden */
                403: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /**
                             * @description Unauthorized
                             * @example You dont have elevated permissions to create a user
                             */
                            message: string;
                        };
                    };
                };
            };
        };
        trace?: never;
    };
    "/api/shops/{id}/documents": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get a shop with documents
         * @description Get a shop with documents
         */
        get: {
            parameters: {
                query?: never;
                header: {
                    authorization: string;
                };
                path: {
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Success */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            shop: {
                                id?: number;
                                name: string;
                                address?: string | null;
                                location?: string | null;
                                salesOwnerId?: number | null;
                                buyerType?: string | null;
                                sellerType?: string | null;
                                panCard?: string | null;
                                gstin?: string | null;
                                verifiedAt?: string | null;
                                createdAt?: string;
                                updatedAt?: string;
                                archivedAt?: string | null;
                                customers?: {
                                    id?: number;
                                    name: string;
                                    contactNumber: string;
                                    isOwner: boolean;
                                    shopId?: number | null;
                                    createdAt?: string;
                                    updatedAt?: string;
                                }[];
                                documents?: {
                                    id?: number;
                                    type: string;
                                    url: string;
                                    shopId?: number | null;
                                    createdAt?: string;
                                    updatedAt?: string;
                                    presignedUrl: string;
                                }[];
                            };
                        };
                    };
                };
                /** @description Forbidden */
                403: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /**
                             * @description Unauthorized
                             * @example You dont have elevated permissions to create a user
                             */
                            message: string;
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/products": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * List products
         * @description List all products
         */
        get: {
            parameters: {
                query: {
                    type: "all" | "inWarehouse" | "notInWarehouse";
                };
                header: {
                    authorization: string;
                };
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Products fetched successfully */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            data: {
                                id: number;
                                shopId: number | null;
                                commodity: string;
                                grade: string;
                                quality: string | null;
                                sampleImage: string | null;
                                sampleCode: string | null;
                                location: string | null;
                                locationTest: string | null;
                                inhouseWarehouse: boolean;
                                warehouseName: string | null;
                                bagQuantity: number | null;
                                avgBagWeight: number | null;
                                packetQuantity: number | null;
                                avgPacketWeight: number | null;
                                totalQuantity: number | null;
                                createdAt: string;
                                updatedAt: string;
                                archivedAt: string | null;
                                shop: {
                                    id: number;
                                    name: string;
                                    address: string | null;
                                    location: string | null;
                                    salesOwnerId: number | null;
                                    buyerType: string | null;
                                    sellerType: string | null;
                                    panCard: string | null;
                                    gstin: string | null;
                                    verifiedAt: string | null;
                                    createdAt: string;
                                    updatedAt: string;
                                    archivedAt: string | null;
                                } | null;
                            }[];
                        };
                    };
                };
            };
        };
        put?: never;
        /**
         * Create a product
         * @description Create a product
         */
        post: {
            parameters: {
                query?: never;
                header: {
                    authorization: string;
                };
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        id?: number;
                        shopId?: number | null;
                        commodity: string;
                        grade: string;
                        quality?: string | null;
                        sampleImage?: string | null;
                        sampleCode?: string | null;
                        location?: string | null;
                        locationTest?: string | null;
                        inhouseWarehouse?: boolean;
                        warehouseName?: string | null;
                        bagQuantity?: number | null;
                        avgBagWeight?: number | null;
                        packetQuantity?: number | null;
                        avgPacketWeight?: number | null;
                        totalQuantity?: number | null;
                        createdAt?: string;
                        updatedAt?: string;
                        archivedAt?: string | null;
                    };
                };
            };
            responses: {
                /** @description Product created successfully */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            status: string;
                        };
                    };
                };
                /** @description Product not found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            message: string;
                        };
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/products/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get product by ID
         * @description Get product by ID
         */
        get: {
            parameters: {
                query?: never;
                header: {
                    authorization: string;
                };
                path: {
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Product fetched successfully */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            data: {
                                id: number;
                                shopId: number | null;
                                commodity: string;
                                grade: string;
                                quality: string | null;
                                sampleImage: string | null;
                                sampleCode: string | null;
                                location: string | null;
                                locationTest: string | null;
                                inhouseWarehouse: boolean;
                                warehouseName: string | null;
                                bagQuantity: number | null;
                                avgBagWeight: number | null;
                                packetQuantity: number | null;
                                avgPacketWeight: number | null;
                                totalQuantity: number | null;
                                createdAt: string;
                                updatedAt: string;
                                archivedAt: string | null;
                            };
                        };
                    };
                };
                /** @description Product not found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            message: string;
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        /**
         * Delete product
         * @description Delete product
         */
        delete: {
            parameters: {
                query?: never;
                header: {
                    authorization: string;
                };
                path: {
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Product deleted successfully */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            status: string;
                        };
                    };
                };
                /** @description Product not found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            message: string;
                        };
                    };
                };
            };
        };
        options?: never;
        head?: never;
        /**
         * Update product
         * @description Update product
         */
        patch: {
            parameters: {
                query?: never;
                header: {
                    authorization: string;
                };
                path: {
                    id: string;
                };
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        id?: number;
                        shopId?: number | null;
                        commodity: string;
                        grade: string;
                        quality?: string | null;
                        sampleImage?: string | null;
                        sampleCode?: string | null;
                        location?: string | null;
                        locationTest?: string | null;
                        inhouseWarehouse?: boolean;
                        warehouseName?: string | null;
                        bagQuantity?: number | null;
                        avgBagWeight?: number | null;
                        packetQuantity?: number | null;
                        avgPacketWeight?: number | null;
                        totalQuantity?: number | null;
                        createdAt?: string;
                        updatedAt?: string;
                        archivedAt?: string | null;
                    };
                };
            };
            responses: {
                /** @description Product updated successfully */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            status: string;
                        };
                    };
                };
                /** @description Product not found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            message: string;
                        };
                    };
                };
            };
        };
        trace?: never;
    };
    "/api/feedback": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * List all Feedbacks
         * @description List all feedbacks
         */
        get: {
            parameters: {
                query?: never;
                header: {
                    authorization: string;
                };
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description List of feedbacks */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id: number;
                            shopId: number | null;
                            salesOwnerId: number | null;
                            contactPerson: string;
                            method: string;
                            followUpDate: string;
                            followUpType: string | null;
                            description: string | null;
                            verifiedAt: string | null;
                            createdAt: string;
                            updatedAt: string;
                            shop: {
                                id: number;
                                customers: {
                                    name: string;
                                    id: number;
                                }[];
                            };
                            feedbackProducts: {
                                id: number;
                                product: {
                                    sampleCode: string | null;
                                    grade: string;
                                    commodity: string;
                                } | null;
                            }[];
                        }[];
                    };
                };
                /** @description Feedback not found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            message: string;
                        };
                    };
                };
            };
        };
        put?: never;
        /**
         * Create a product
         * @description Create a product
         */
        post: {
            parameters: {
                query?: never;
                header: {
                    authorization: string;
                };
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        feedback: {
                            id?: number;
                            shopId?: number | null;
                            salesOwnerId?: number | null;
                            contactPerson: string;
                            method: string;
                            followUpDate: string;
                            followUpType?: string | null;
                            description?: string | null;
                            verifiedAt?: string | null;
                            createdAt?: string;
                            updatedAt?: string;
                        };
                        products: {
                            id?: number;
                            feedbackId?: number | null;
                            productId?: number | null;
                            targetPrice: string;
                            quantity: string;
                            isGstIncluded: boolean;
                            sampleCollected: boolean;
                            sampleTaken?: string | null;
                            description?: string | null;
                            sampleImage?: string | null;
                            createdAt?: string;
                            updatedAt?: string;
                        }[];
                    };
                };
            };
            responses: {
                /** @description Product created successfully */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            status: string;
                        };
                    };
                };
                /** @description Product not found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            message: string;
                        };
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/feedback/{id}/tags": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Create tags for a product
         * @description Create tags for a customer feedback
         */
        post: {
            parameters: {
                query?: never;
                header: {
                    authorization: string;
                };
                path: {
                    id: string;
                };
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        data: {
                            id?: number;
                            feedbackId?: number | null;
                            productFeedbackId?: number | null;
                            type: string;
                            name: string;
                            value: string;
                            description: string;
                            createdAt?: string;
                            updatedAt?: string;
                        }[];
                    };
                };
            };
            responses: {
                /** @description Tags created successfully */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            status: string;
                        };
                    };
                };
                /** @description Product not found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            message: string;
                        };
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/feedback/{id}/tags/{tagId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        /**
         * Update tags for a product
         * @description Update tags for a customer feedback
         */
        patch: {
            parameters: {
                query?: never;
                header: {
                    authorization: string;
                };
                path: {
                    id: string;
                    tagId: string;
                };
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        data?: {
                            id?: number;
                            feedbackId?: number | null;
                            productFeedbackId?: number | null;
                            type: string;
                            name: string;
                            value: string;
                            description: string;
                            createdAt?: string;
                            updatedAt?: string;
                        };
                    };
                };
            };
            responses: {
                /** @description Tags updated successfully */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            status: string;
                        };
                    };
                };
                /** @description Data is required */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            status: string;
                            message: string;
                        };
                    };
                };
                /** @description Product not found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            message: string;
                        };
                    };
                };
            };
        };
        trace?: never;
    };
    "/api/feedback/shop/{shopId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * List all products by shop ID
         * @description List all products by shop ID
         */
        get: {
            parameters: {
                query?: never;
                header: {
                    authorization: string;
                };
                path: {
                    shopId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description List of products */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id: number;
                            shopId: number | null;
                            salesOwnerId: number | null;
                            contactPerson: string;
                            method: string;
                            followUpDate: string;
                            followUpType: string | null;
                            description: string | null;
                            verifiedAt: string | null;
                            createdAt: string;
                            updatedAt: string;
                            feedbackProducts: {
                                id: number;
                                feedbackId: number | null;
                                productId: number | null;
                                targetPrice: string;
                                quantity: string;
                                isGstIncluded: boolean;
                                sampleCollected: boolean;
                                sampleTaken: string | null;
                                description: string | null;
                                sampleImage: string | null;
                                createdAt: string;
                                updatedAt: string;
                                feedbackTags: {
                                    id: number;
                                    feedbackId: number | null;
                                    productFeedbackId: number | null;
                                    type: string;
                                    name: string;
                                    value: string;
                                    description: string;
                                    createdAt: string;
                                    updatedAt: string;
                                }[];
                                product: {
                                    id: number;
                                    shopId: number | null;
                                    commodity: string;
                                    grade: string;
                                    quality: string | null;
                                    sampleImage: string | null;
                                    sampleCode: string | null;
                                    location: string | null;
                                    locationTest: string | null;
                                    inhouseWarehouse: boolean;
                                    warehouseName: string | null;
                                    bagQuantity: number | null;
                                    avgBagWeight: number | null;
                                    packetQuantity: number | null;
                                    avgPacketWeight: number | null;
                                    totalQuantity: number | null;
                                    createdAt: string;
                                    updatedAt: string;
                                    archivedAt: string | null;
                                } | null;
                            }[];
                        }[];
                    };
                };
                /** @description Product not found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            message: string;
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/feedback/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get a product by ID
         * @description Get a product by ID
         */
        get: {
            parameters: {
                query?: never;
                header: {
                    authorization: string;
                };
                path: {
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Product details */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id: number;
                            shopId: number | null;
                            salesOwnerId: number | null;
                            contactPerson: string;
                            method: string;
                            followUpDate: string;
                            followUpType: string | null;
                            description: string | null;
                            verifiedAt: string | null;
                            createdAt: string;
                            updatedAt: string;
                            salesOwner: {
                                firstName: string;
                                lastName: string;
                                id: number;
                            };
                            shop: {
                                id: number;
                                customers: {
                                    name: string;
                                    id: number;
                                }[];
                            };
                            feedbackProducts: {
                                id: number;
                                feedbackId: number | null;
                                productId: number | null;
                                targetPrice: string;
                                quantity: string;
                                isGstIncluded: boolean;
                                sampleCollected: boolean;
                                sampleTaken: string | null;
                                description: string | null;
                                sampleImage: string | null;
                                createdAt: string;
                                updatedAt: string;
                                feedbackTags: {
                                    id: number;
                                    feedbackId: number | null;
                                    productFeedbackId: number | null;
                                    type: string;
                                    name: string;
                                    value: string;
                                    description: string;
                                    createdAt: string;
                                    updatedAt: string;
                                }[];
                                product: {
                                    sampleCode: string | null;
                                    grade: string;
                                    commodity: string;
                                };
                            }[];
                        };
                    };
                };
                /** @description Product not found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            message: string;
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: never;
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export type operations = Record<string, never>;
